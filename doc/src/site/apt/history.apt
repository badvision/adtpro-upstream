 -----
 ADTPro Release History
 -----
 David Schmidt (david__schmidt at users dot souceforge dot net)
 -----

ADTPro Release History

* 1.0.6 - February 10, 2008

 Bug fixes:

 * [Client] Formatting was unreliable for 5.25" media due to
   timing-sensitive code placement

 * [Client] Formatting was unreliable for 3.5" media due to unfortunate
   re-use of zero-page variable space

 []

* 1.0.5 - February 3, 2008

 Bug fixes:

 * [Server] Hosts with zero audio mixers (a Java thing) were crashing with
   java.lang.ArrayIndexOutOfBoundsException in AudioConfig.java

 * [Client] IIgs serial port initialization was not working for speeds
   below 115.2kbps as a result of the 300 baud integration in v1.0.3

 []

* 1.0.4 - January 21, 2008

 New functionality:

 * [DOS ADT Client] Included DOS ADT client, now at version 2.2,
   with nibble and halftrack send capability for Disk II drives
   from Gerard Putter and Eric Neilson 

 * [Server] Incorporated nibble and half track disk logic from
   Gerard Putter's ADT-compatible Virtual ][ A2V2 transfer software -
   it's still experimental, so support hasn't been added to ADTPro
   client yet

 []

 Bug fixes:

 * [Client] Better automatic serial device detection for Apple IIc
   computers (select Modem vs. Printer port)

 * [Client] Update track counter during fast Disk II reads (you had
   to watch carefully to realize they weren't moving during read)

 * [Server] Audio data capture logic was refactored to be more
   reliable and understandable by Marc S. Re&#223;l

 * [Client] Audio send protocol (from Apple to Host) was out of sync,
   causing transfers to immediately abort

 * [Server] Fix progressive backoff timing for transmission failures

 []

* 1.0.3 - October 7, 2007

 New functionality:

 * Support for 300 baud operation to help non-upgraded ROM 255 Apple IIc
   computers with the serial timing problem

 []

 Bug fixes:

 * [Client] Only re-scan drives for volume information the first time, and
   thereafter only when requested; this saves time (and, potentially, drive
   knocking) whenever the volume screen is shown

 * [Client] Removed last dependency on Applesoft string printing; enables
   running on orignal integer Apple ][ (non-plus) ROM machines

 * [Server] Always record 5-1/4" disks at the host as DOS order images

 * [Server] Corrected DOS audio addresses coming from bootstrapping 
   instructions

 * [Server] Honor the "Apple IIc Serial" checkbox (which disables hardware
   handshaking) on startup; previously, one had to open the communications
   dialog box and explicitly hit OK to get it recognized

 []

* 1.0.2 - August 11, 2007

 New functionality:

 * [Client] Borrowed very fast Disk II reading routines from FASTDSK
   (See: {{http://boutillon.free.fr/Underground/Docs/Fastdsk/Fastdsk_en.html}});
   reduces Disk II transfer time from Apple II to Host by 25%-33%.

 * [Client] Refactored client programs as ProDOS 8 system (SYS) 
   applications.  This means that saving a configuration no longer BSAVEs
   the entire client, but instead writes a little config file.

 * [Client] Incorporated Bird's Better Bye program selector for Apple II+
   users - because the 40-column ProDOS program selector is the very
   definition of user hostility

 * [Server] Eliminated the need for bootstrapping operations to send the
   ProDOS BASIC interpreter

 []

 Bug fixes:

 * [Server] The routine to determine physical sector ordering was made
   more accurate, especially for 5-1/4" disks.

 * [Server] Bulk transfers of Disk II images wrote DOS-order images,
   but named them "*.PO," making it easy to mistake them for 
   ProDOS-order images.  Now bulk transfers coming from Disk IIs are
   named "*.DSK."

 []

* 1.0.1 - July 8, 2007

 New functionality:

 * [Client] Support added for Laser 128 serial via generic Pascal entry
   points on slot 2; included a copy of DOS ADT similarly enhanced

 []

 Bug fixes:

 * [Client] Unformatted media in an 800k drive would get an incorrect 
   free block count after formatting.

 * [Client] Changed bootstrapping to rely less on pure Apple-isms in the
   monitor.  Improved ProDOS stage 1 bootstrapping to not require the 
   tricky control key sequence to get at the comms card from the monitor.
   This enables Laser and Franklin compatibles.

 * [Server] Slowed down default bootstrap pacing to 150ms.

 []

* 1.0.0 - June 21, 2007

 First official public release after one year of beta iterations.
 Communications methods include:

  * {{{connectionsserial.html#Super Serial cabling}Super Serial}} card, {{{connectionsserial.html#MiniDIN8}IIgs modem port}}, or {{{connectionsserial.html#DIN5}IIc/Laser 128 serial port}}

  * {{{http://a2retrosystems.com/}Uthernet}} Ethernet card

  * The Apple's {{{connectionsaudio.html}cassette ports}}

 []

 Feature set includes:

  * Transfers any storage device ProDOS can access

  * Runs on any Apple II (or clone) computer with 64k memory

  * Runs on Linux, Mac OSX, OS/2, Windows, and probably Solaris

  * Understands many digital disk formats: .DSK, .PO, .NIB, 2IMG

  * Serves the original {{{compatability.html}ADT client}} as well as the updated ADTPro client

  * Bootstraps Apple II computers from bare metal over {{{bootstrap.html}serial}} or {{{bootstrapaudio.html}cassette}} ports

  * Sends floppies in "{{{batch.html}batch}}" mode without having to name each one

  * {{{misc.html#Format}Formats}} media on the Apple II end

 []

 New functionality over final beta:

 * [Client] The formatting function is now integrated instead of being a
   separate program

 * [Client] Volume picker screen sets the default slot/drive for the 
   BASIC interpreter

 []

 Bug fixes from final beta:

 * [Client] (Finally) fixed audio transfer retry logic - darn Java and its
   signed bytes!  Audio transfers are reliable at last.  Slow as ever,
   but reliable.

 * [Client] Fixed 15-character volume name bugs: one in the formatter, one in
   the online displayer/picker

 * [Client] Made the Uther slot-scanning algorithm a little less intrusive,
   and used a MHz-insensitive timing loop to make UDP timeouts
   a little more reasonable on accelerated machines

 * [Client] Used a MHz-insensitive timing loop to make the delightful beeping
   noise sound the same no matter how fast the CPU is going

 * [Server] Better flow control for serial bootstrapping - improves life for
   serial interfaces that do their own buffering (i.e. Keyspan USA-28)

 []