<?xml version="1.0" encoding="UTF-8"?>
<project name="ADTPro" default="jar" basedir="..">
	<property name="versionString" value="0.0.8" />
	<property name="distName" value="ADTPro-${versionString}" />
	<property name="volName" value="ADTPro.${versionString}" />
	<property name="assemblerPath" value="C:/dev/xassm/cc65/bin" />
	<property name="projdir" value="." />
	<property name="builddir" value="${basedir}/build" />
	<property name="acJar" value="AppleCommander-1.3.4b-ac.jar" />

	<target name="clean">
		<!--
		Clean up everything
		-->
		<delete file="${builddir}/ADTPRO" />
		<delete file="${builddir}/${distName}.dsk" />
		<delete file="${builddir}/${distName}.jar" />
		<delete file="${builddir}/${distName}.zip" />
		<delete>
			<fileset dir="${projdir}/client/src" includes="**/*.o"/>
			<fileset dir="${projdir}/client/src" includes="**/*.map"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lst"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lib"/>
		</delete>
	</target>

	<target name="assemble" depends="clean">
		<!--
		Assemble the ADTPro source
		-->
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t c64 ethernet/test.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t c64 serial/sermain.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t c64 ethernet/ethmain.asm" />
		</exec>
		<!--
		Assemble, archive the IP stack
		-->
		<apply executable="${assemblerPath}/ca65" dest="${projdir}/client/src/ip65" dir="${projdir}/client/src/ip65" parallel="false">
			<arg value="-l"/>
			<srcfile/>
			<arg value="-o"/>
			<targetfile/>
			<fileset dir="${projdir}/client/src/ip65" includes="*.s"/>
			<mapper type="glob" from="*.s" to="*.o"/>
		</apply>
<!--
		<exec dir="${projdir}/client/src/ip65" executable="${assemblerPath}/ar65">
			<arg line="a ip65.lib copymem.o config.o timer.o tfe.o cs8900a.o eth.o arp.o ip.o icmp.o udp.o ip65.o" />
		</exec>
-->
		<!--
		Link the bits
		-->
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtproser.map -C adtpro.cfg -o ADTPRO serial/sermain.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtproeth.map -C adtpro.cfg -o ADTPROETH ethernet/ethmain.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m test.map -C adtpro.cfg -o TEST ethernet/test.o" />
		</exec>
		<!--
		Move the object code to the build directory
		-->
		<move file="${projdir}/client/src/TEST" tofile="${builddir}/TEST" />
		<move file="${projdir}/client/src/ADTPRO" tofile="${builddir}/ADTPRO" />
		<move file="${projdir}/client/src/ADTPROETH" tofile="${builddir}/ADTPROETH" />
	</target>

	<target name="builddsk" depends="assemble">
		<!--
		Start a .dsk image containing the release number
		-->
		<copy file="${builddir}/ADTProBase.dsk" tofile="${builddir}/${distName}.dsk" />
		<!--
		Put the assembled ADTPRO program on the .dsk image a couple of times
		and lock the backup version
		-->
		<exec dir="${builddir}" executable="java" input="${builddir}/TEST">
			<arg line="-jar ${acJar} -p TEST bin 2051 ${distName}.dsk" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPRO">
			<arg line="-jar ${acJar} -p ADTPRO bin 2051 ${distName}.dsk" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPROETH">
			<arg line="-jar ${acJar} -p ADTPROETH bin 2051 ${distName}.dsk" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPRO">
			<arg line="-jar ${acJar} -p ADTPRO.BACKUP bin 2051 ${distName}.dsk" />
		</exec>
		<!--
		Lock the backup version
		-->
		<exec dir="${builddir}" executable="java">
			<arg line="-jar ${acJar} -k ADTPRO.BACKUP ${distName}.dsk" />
		</exec>
		<!--
		Put a nice volume name on the .dsk image
		-->
		<exec dir="${builddir}" executable="java">
			<arg line="-jar ${acJar} -v ${distName}.dsk ${volName}" />
		</exec>
	</target>

	<target name="jar" depends="builddsk">
		<!-- jar up the source, object and properties files -->
		<jar jarfile="${builddir}/${distName}.jar" manifest="${builddir}/manifest.mf" basedir="${projdir}" includes="org/**/*.class org/**/*.java org/**/*.properties org/**/*.png LICENSE" />
		<!-- zip up the whole sheebang -->
		<zip destfile="${builddir}/${distName}.zip" basedir="${builddir}" includes="${distName}.jar ${distName}.dsk rxtx/rxtx-2.1-7-bins-r2.zip LICENSE README" />
	</target>
</project>
