<?xml version="1.0" encoding="UTF-8"?>
<!--

To get started, make a copy of ADTProBuild-default.properties, name it
ADTProBuild.properties, leave it in the same directory, and customize it
before running this. You'll want to add ant.jar to the build path, as well.

See:
http://adtpro.sourceforge.net/developing.html

-->

<!--

Note - to ensure that standard input is interpreted consistently on all
platforms by AppleCommander, the specific console encoding is specified
everywhere it is invoked:
     <jvmarg line="-Dconsole.encoding=ISO-8859-15" />

-->

<project name="ADTPro" default="all" basedir="..">
	<property name="versionString" value="v.r.m" />
	<property name="distName" value="ADTPro-${versionString}" />
	<property name="diskName" value="ADTPRO-${versionString}" />
	<property name="volName" value="ADTPro.${versionString}" />
	<property name="dosVersionString" value="24" />
	<property name="dosDistName" value="ADT${dosVersionString}" />
	<property name="projdir" value="${basedir}" />
	<property name="builddir" value="${basedir}/build" />
	<property file="${builddir}/ADTProBuild.properties"/>
	<property file="${builddir}/ADTProBuild-default.properties"/>
	<property name="acJar" value="${builddir}/lib/AppleCommander-1.3.5.9-ac.jar" />
	<property name="jarBundlerJar" value="${builddir}/lib/jarbundler-2.1.0/jarbundler-2.1.0.jar" />
	<property name="rxtxVersion" value="rxtx-2.2pre2-local" />
	<property name="rxtxZip" value="${rxtxVersion}.zip" />
	<property name="rxtxVersion2" value="rxtx-2.1-7-bins-r2" />
	<property name="rxtxZip2" value="${rxtxVersion2}.zip" />
	<property name="dmgmegabytes" value="6" />
	<taskdef name="appleDump" classname="org.adtpro.utilities.AppleDump" classpath="${projdir}"/>
	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="${jarBundlerJar}"/>
	<echo message="${distName} building on ${os.name}."/>
	<condition property="isOSX">
		<os name="Mac OS X"/>
	</condition>

	<target name="skipSOS" description="Order this before 'dev' or 'all' to skip building SOS parts.">
		<property name="skipSOS" value="true"/>		
	</target>

	<target name="skipProDOS" description="Order this before 'dev' or 'all' to skip building ProDOS parts.">
		<property name="skipProDOS" value="true"/>		
	</target>

	<target name="all" depends="wipe, clean, setup, assemble, builddsk, scripts, jar, osx" description="Bulid everything after wiping the output directory.">
	</target>

	<target name="dev" depends="clean, setup, assemble, builddsk" description="Build everything but the Java GUI; don't wipe the output directory.">
	</target>

	<target name="setup">
		<copy file="${builddir}/ADTProBase.dsk" tofile="${builddir}/${distName}/disks/${diskName}.DSK" />
		<condition property="SOS-needed">
			<not>
				<isset property="skipSOS" />
			</not>
		</condition>
		<condition property="ProDOS-needed">
			<not>
				<isset property="skipProDOS" />
			</not>
		</condition>
	</target>

	<target name="wipe">
		<!--
		Clean up everything
		-->
		<delete dir="${builddir}/${distName}" />
	</target>

	<target name="clean">
		<!--
		Clean up everything
		-->
		<!-- <delete file="${projdir}/client/src/dos/ADT" /> -->
		<delete file="${builddir}/ADT" />
		<delete file="${builddir}/ADTPRO" />
		<delete file="${builddir}/ADTPRO.SYSTEM" />
		<delete file="${builddir}/ADTSOS" />
		<delete file="${builddir}/ADTPROAUD" />
		<delete file="${builddir}/ADTPROETH" />
		<delete file="${builddir}/ADTSOSETH" />
		<delete file="${builddir}/ADTPROAUD.BIN" />
		<delete file="${builddir}/ADTPROETH.BIN" />
		<delete file="${builddir}/ADTSOSETH.BIN" />
		<delete file="${projdir}/client/src/messages.asm" />
		<delete file="${projdir}/client/src/GRUB" />
		<delete file="${projdir}/client/src/LOADER" />
		<delete file="${builddir}/${distName}.tar.gz" />
		<delete file="${builddir}/${distName}.zip" />
		<delete file="${builddir}/${distName}.dmg" />
		<delete file="${builddir}/${distName}/disks/${diskName}.DSK" />
		<delete file="${builddir}/${distName}/disks/${diskName}.PO" />
		<delete file="${builddir}/${distName}/disks/${dosDistName}.DSK" />
		<delete file="${projdir}/org/adtpro/resources/adt.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtpro.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtproaud.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtproeth.dmp" />
		<delete file="${projdir}/org/adtpro/resources/grub.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adt.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtpro.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtproaud.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtproeth.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtsos.raw" />
		<delete file="${projdir}/org/adtpro/resources/SK.raw" />
		<delete file="${projdir}/org/adtpro/resources/SOSLoader.raw" />
		<delete file="${projdir}/org/adtpro/resources/PD.dmp" />
		<delete file="${projdir}/org/adtpro/resources/messages.properties" />
		<delete>
			<fileset dir="${projdir}/org/adtpro/resources" includes="messages_*.properties"/>
			<fileset dir="${projdir}/client/src" includes="**/*.o"/>
			<fileset dir="${projdir}/client/src" includes="**/*.map"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lst"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lib"/>
		</delete>
	</target>

	<target name="assemble">
		<mkdir dir="${builddir}/${distName}"/>
		<copy file="${projdir}/client/src/messagesOrig.asm" tofile="${projdir}/client/src/messages.asm" overwrite="true" />
		<replace file="${projdir}/client/src/messages.asm" token="%ADTPRO_VERSION%" value="${versionString}"/>
		<antcall target="assembleProDOS"/>
		<antcall target="assembleSOS"/>
	</target>

	<target name="assembleProDOS" depends="assembleCommon" if="ProDOS-needed">
		<!--
		Assemble the ADTPro source
		-->
		<echo message="Assembling ADTPROAUD source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l prodos/audio/audmain.lst prodos/audio/audmain.asm" />
		</exec>
		<echo message="Assembling ADTPROETH source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l prodos/ethernet/ethmain.lst prodos/ethernet/ethmain.asm" />
		</exec>
		<echo message="Assembling ADTPRO source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l prodos/serial/sermain.lst prodos/serial/sermain.asm" />
		</exec>
		<echo message="Assembling ADTPRO Launcher source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l prodos/launch.lst prodos/launch.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l prodos/startup.lst prodos/startup.asm" />
		</exec>
		<!--
		Assemble and link the ADT source
		-->
		<echo message="Assembling ADT source..."/>
		<exec dir="${projdir}/client/src/dos" executable="${assemblerPath}/cl65">
			<arg line="-t none -l adt.lst adt.s -o ADT" />
		</exec>
		<!--
		Link the bits
		-->
		<echo message="Linking Startup/Launcher..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o STARTUP.SYSTEM -C prodos/adtprolaunch.cfg prodos/startup.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTPRO -C prodos/adtprolaunch.cfg prodos/launch.o" />
		</exec>
		<echo message="Linking ADTPRO..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTPRO.BIN -m adtproser.map -C prodos/serial/adtpro.cfg prodos/serial/sermain.o tail.o" />
		</exec>
		<echo message="Linking ADTPROAUD..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTPROAUD.BIN -m adtproaud.map -C prodos/audio/adtpro.cfg prodos/audio/audmain.o tail.o" />
		</exec>
		<echo message="Linking ADTPROETH..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTPROETH.BIN -m adtproeth.map -C prodos/ethernet/adtpro.cfg prodos/ethernet/ethmain.o ip65/ip65.lib tail.o" />
		</exec>
		<!--
		Move the object code to the build directory
		-->
		<move file="${projdir}/client/src/STARTUP.SYSTEM" tofile="${builddir}/STARTUP.SYSTEM" />
		<copy file="${projdir}/client/src/ADTPRO" tofile="${builddir}/ADTPROAUD" />
		<copy file="${projdir}/client/src/ADTPRO" tofile="${builddir}/ADTPROETH" />
		<move file="${projdir}/client/src/ADTPRO" tofile="${builddir}/ADTPRO" />
		<move file="${projdir}/client/src/ADTPRO.BIN" tofile="${builddir}/ADTPRO.BIN" />
		<copy file="${builddir}/ADTPRO.BIN" tofile="${basedir}/org/adtpro/resources/adtpro.raw" />
		<move file="${projdir}/client/src/ADTPROAUD.BIN" tofile="${builddir}/ADTPROAUD.BIN" />
		<copy file="${builddir}/ADTPROAUD.BIN" tofile="${basedir}/org/adtpro/resources/adtproaud.raw" />
		<move file="${projdir}/client/src/ADTPROETH.BIN" tofile="${builddir}/ADTPROETH.BIN" />
		<copy file="${builddir}/ADTPROETH.BIN" tofile="${basedir}/org/adtpro/resources/adtproeth.raw" />
		<move file="${projdir}/client/src/dos/ADT" tofile="${builddir}/ADT" />
		<copy file="${builddir}/ADT" tofile="${basedir}/org/adtpro/resources/adt.raw" />
		<!--
		Make dumpable versions
		-->
		<appleDump infilename="${projdir}/org/adtpro/resources/PD.raw" outfilename="${basedir}/org/adtpro/resources/PD.dmp" applename="PD" startaddrhex="2000" numbyteswide="10" decoration="begin" finalline="2000G E000G"/>
		<appleDump infilename="${builddir}/ADTPROETH.BIN" outfilename="${basedir}/org/adtpro/resources/adtproeth.dmp" applename="ADTPROETH.BIN" startaddrhex="800" numbyteswide="10" decoration="begin" finalline="800G"/>
		<appleDump infilename="${builddir}/ADTPROAUD.BIN" outfilename="${basedir}/org/adtpro/resources/adtproaud.dmp" applename="ADTPROAUD.BIN" startaddrhex="800" numbyteswide="10" decoration="begin" finalline="800G"/>
		<appleDump infilename="${builddir}/ADTPRO.BIN" outfilename="${basedir}/org/adtpro/resources/adtpro.dmp" applename="ADTPRO.BIN" startaddrhex="800" numbyteswide="10"  decoration="begin" finalline="800G"/>
		<appleDump infilename="${builddir}/ADT" outfilename="${basedir}/org/adtpro/resources/adt.dmp" applename="ADT" startaddrhex="803" numbyteswide="10" decoration="yes" />
	</target>

	<target name="assembleSOS" depends="assembleCommon" if="SOS-needed">
		<!--
		Assemble the ADTSOS source
		-->
		<echo message="Assembling ADTSOSSER source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l sos/serial/sermain.lst sos/serial/sermain.asm" />
		</exec>
		<echo message="Assembling ADTSOSETH source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l sos/ethernet/ethmain.lst sos/ethernet/ethmain.asm" />
		</exec>
		<echo message="Assembling SOS serial Grub source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l sos/serial/grub.lst sos/serial/grub.asm" />
		</exec>
		<echo message="Assembling SOS serial Loader source..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l sos/serial/loader.lst sos/serial/loader.asm" />
		</exec>
		<echo message="Assembling SOS Kernel..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none -l sos/serial/kernel.lst sos/serial/kernel.asm" />
		</exec>
		<!--
		Link the bits
		-->
		<echo message="Linking ADTSOSSER..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTSOS -m adtsosser.map -C sos/serial/adtpro.cfg sos/serial/sermain.o tail.o" />
		</exec>
		<echo message="Linking ADTSOSETH..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o ADTSOSETH -m adtsoseth.map -C sos/ethernet/adtpro.cfg sos/ethernet/ethmain.o ip65/ip65.lib tail.o" />
		</exec>
		<echo message="Linking grub..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o GRUB -m grub.map -C sos/serial/plain.cfg sos/serial/grub.o" />
		</exec>
		<echo message="Linking loader..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o LOADER -m loader.map -C sos/serial/plain.cfg sos/serial/loader.o" />
		</exec>
		<echo message="Linking SOS Kernel..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-o sos/serial/SK.raw -C sos/serial/kernel.cfg sos/serial/kernel.o" />
		</exec>
		<!--
		Move the object code to the build directory
		-->
		<move file="${projdir}/client/src/ADTSOS" tofile="${builddir}/ADTSOS" />
		<copy file="${builddir}/ADTSOS" tofile="${basedir}/org/adtpro/resources/adtsos.raw" />
		<copy file="${projdir}/client/src/LOADER" tofile="${basedir}/org/adtpro/resources/SOSLoader.raw" />
		<move file="${projdir}/client/src/ADTSOSETH" tofile="${builddir}/ADTSOSETH" />
		<move file="${projdir}/client/src/sos/serial/SK.raw" tofile="${basedir}/org/adtpro/resources/SK.raw" />
		<!--
		Make dumpable versions
		-->
		<echo message="Dumping Grub..."/>
		<appleDump infilename="${projdir}/client/src/GRUB" outfilename="${basedir}/org/adtpro/resources/grub.dmp" applename="GRUB" startaddrhex="A000" numbyteswide="8" decoration="end"/>
	</target>

	<target name="assembleCommon">
		<!--
		Assemble the end of source marker
		-->
		<echo message="Assembling end-of-source marker..."/>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-t none tail.asm" />
		</exec>
		<!--
		Assemble the IP65 stack source
		-->
		<echo message="Assembling IP65 source..."/>
		<apply executable="${assemblerPath}/ca65" dir="${projdir}/client/src/ip65/ip65" relative="true">
			<fileset dir="${projdir}/client/src/ip65/ip65" includes="**/*.s"/>
			<arg value="-t"/>
			<arg value="c64"/>
			<arg value="-l"/>
			<mapper type="glob" from="*.s" to="*.lst"/>
			<targetfile/>
			<srcfile/>
		</apply>
		<echo message="Assembling IP65 drivers..."/>
		<apply executable="${assemblerPath}/ca65" dir="${projdir}/client/src/ip65/drivers" relative="true">
			<fileset dir="${projdir}/client/src/ip65/drivers" includes="**/*.s"/>
			<arg value="-t"/>
			<arg value="c64"/>
			<arg value="-l"/>
			<mapper type="glob" from="*.s" to="*.lst"/>
			<targetfile/>
			<srcfile/>
		</apply>
		<!--
		Package the IP65 stack library
		-->
		<echo message="Packaging IP65 library..."/>
		<apply executable="${assemblerPath}/ar65" dir="${projdir}/client/src/ip65" output="ar65garbageoutputdeleteme">
			<arg line="a ip65.lib "/>
			<fileset dir="${projdir}/client/src/ip65/ip65" includes="**/*.o"/>
			<fileset dir="${projdir}/client/src/ip65/drivers" includes="**/*.o"/>
		</apply>
		<delete file="ar65garbageoutputdeleteme" />
	</target>

	<target name="scripts">
		<copy file="${builddir}/adtprobase.bat" tofile="${builddir}/${distName}/adtpro.bat" />
		<copy file="${builddir}/adtprobase.cmd" tofile="${builddir}/${distName}/adtpro.cmd" />
		<copy file="${builddir}/adtprobase.sh" tofile="${builddir}/${distName}/adtpro.sh" />
		<replace file="${builddir}/${distName}/adtpro.bat" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.bat" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<replace file="${builddir}/${distName}/adtpro.bat" token="%RXTX_VERSION_OLD%" value="${rxtxVersion2}"/>
		<replace file="${builddir}/${distName}/adtpro.cmd" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.cmd" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<replace file="${builddir}/${distName}/adtpro.sh" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.sh" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<replace file="${builddir}/${distName}/adtpro.sh" token="%RXTX_VERSION_OLD%" value="${rxtxVersion2}"/>
	</target>

	<target name="builddsk" depends="buildProDOSdsk, buildSOSdsk">
	</target>

	<target name="buildProDOSdsk" if="ProDOS-needed">
		<!--
		Start disk images containing the release number
		-->
		<copy file="${builddir}/ADTProBase.po" tofile="${builddir}/${distName}/disks/${diskName}.PO" />
		<copy file="${builddir}/ADTBase.dsk" tofile="${builddir}/${distName}/disks/${dosDistName}.DSK" />
		<!--
		Put the assembled programs on the disk images
		-->

		<echo message="Adding startup files to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/STARTUP.SYSTEM">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK STARTUP.SYSTEM sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPRO sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPROAUD sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPROETH sys 8192" />
		</java>

		<echo message="Adding ADTPRO to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPRO.BIN bin 2048" />
		</java>

		<echo message="Adding ADTPROAUD to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPROAUD.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPROAUD.BIN bin 2048" />
		</java>

		<echo message="Adding ADTPROETH to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPROETH.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK ADTPROETH.BIN bin 2048" />
		</java>
		<!--
		And the .po version...
		-->
		<echo message="Adding startup files to 3.5 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/STARTUP.SYSTEM">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO STARTUP.SYSTEM sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPRO sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPROAUD sys 8192" />
		</java>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPROETH sys 8192" />
		</java>

		<echo message="Adding ADTPRO to 3.5 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPRO.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPRO.BIN bin 2048" />
		</java>

		<echo message="Adding ADTPROAUD to 3.5 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPROAUD.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPROAUD.BIN bin 2048" />
		</java>

		<echo message="Adding ADTPROETH to 3.5 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTPROETH.BIN">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.PO ADTPROETH.BIN bin 2048" />
		</java>
		<!--
		Put the assembled DOS ADT program on the .dsk image
		-->
		<echo message="Adding ADT to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADT">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${dosDistName}.DSK ADT bin 2051" />
		</java>
		<echo message="Adding ADT.BACKUP to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADT">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${dosDistName}.DSK ADT.BACKUP bin 2051" />
		</java>
		<!--
		Lock the backup ADT version
		-->
		<echo message="Locking ADT on 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}">
			<arg line="-k ${distName}/disks/${dosDistName}.DSK ADT.BACKUP" />
		</java>
		<!--
		Put a nice volume name on the disk images
		-->
		<echo message="Adding ADTPro volume name to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}">
			<arg line="-n ${distName}/disks/${diskName}.DSK ${volName}" />
		</java>
		<echo message="Adding ADTPro volume name to 3.5 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}">
			<arg line="-n ${distName}/disks/${diskName}.PO ${volName}" />
		</java>
		<delete file="${builddir}/ADT" />
		<delete file="${builddir}/ADTPRO" />
		<delete file="${builddir}/ADTPRO.SYSTEM" />
		<delete file="${builddir}/STARTUP.SYSTEM" />
		<delete file="${builddir}/ADTPROAUD" />
		<delete file="${builddir}/ADTPROETH" />
		<delete file="${builddir}/ADTPRO.BIN" />
		<delete file="${builddir}/ADTPROETH.BIN" />
		<delete file="${builddir}/ADTPROAUD.BIN" />
	</target>

	<target name="buildSOSdsk" if="SOS-needed">
		<!--
		Put the assembled programs on the disk images
		-->
		<echo message="Adding ADTSOS to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTSOS">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK SOS.INTERP sos 0000" />
		</java>
		<echo message="Adding ADTSOSETH to 5.25 disk image..."/>
		<java jar="${acJar}" fork="true" dir="${builddir}" input="${builddir}/ADTSOSETH">
			<jvmarg line="-Dconsole.encoding=ISO-8859-15" />
			<arg line="-p ${distName}/disks/${diskName}.DSK SOS.INTERPETH sos 0000" />
		</java>
		<!--
		Put a nice volume name on the disk images
		-->
		<java jar="${acJar}" fork="true" dir="${builddir}">
			<arg line="-n ${distName}/disks/${diskName}.DSK ${volName}" />
		</java>
		<delete file="${builddir}/ADTSOS" />
		<delete file="${builddir}/ADTSOSETH" />
	</target>

	<target name="jar">
		<copy file="${projdir}/org/adtpro/resources/messagesOrig.properties" tofile="${projdir}/org/adtpro/resources/messages.properties" overwrite="true" />
		<replace file="${projdir}/org/adtpro/resources/messages.properties" token="%ADTPRO_VERSION%" value="${versionString}"/>
		<!-- Convert localized resource properties to ascii -->
		<native2ascii encoding="EUC_KR" src="${projdir}/org/adtpro/resources" dest="${projdir}/org/adtpro/resources"
		   includes="messages_ko_KR.native" ext=".properties" />
		<native2ascii encoding="ISO-8859-1" src="${projdir}/org/adtpro/resources" dest="${projdir}/org/adtpro/resources"
		   includes="messages_fr.native" ext=".properties" />
		<native2ascii encoding="ISO-8859-1" src="${projdir}/org/adtpro/resources" dest="${projdir}/org/adtpro/resources"
		   includes="messages_es.native" ext=".properties" />
		<native2ascii encoding="ISO-8859-1" src="${projdir}/org/adtpro/resources" dest="${projdir}/org/adtpro/resources"
		   includes="messages_it.native" ext=".properties" />
		<native2ascii encoding="ISO-8859-1" src="${projdir}/org/adtpro/resources" dest="${projdir}/org/adtpro/resources"
		   includes="messages_pt_BR.native" ext=".properties" />
		<unzip src="${builddir}/lib/rxtx/${rxtxZip}"
			dest="${builddir}/${distName}/lib/rxtx"/>
		<unzip src="${builddir}/lib/rxtx/${rxtxZip2}"
			dest="${builddir}/${distName}/lib/rxtx"/>
		<copy file="${builddir}/README" todir="${builddir}/${distName}" />
		<copy file="${builddir}/LICENSE" todir="${builddir}/${distName}" />
		<copy file="${builddir}/ADTPro.html" todir="${builddir}/${distName}" />
		<copy file="${projdir}/org/adtpro/resources/ADTPro.ico" todir="${builddir}/${distName}/lib" />
		<!-- jar up the source, object and properties files -->
		<jar jarfile="${builddir}/${distName}/lib/${distName}.jar"
			manifest="${builddir}/manifest.mf"
			basedir="${projdir}"
			includes="org/**/*.class org/**/*.java org/**/*.properties org/**/*.png org/**/*.dmp org/**/*.raw LICENSE" />
		<chmod dir="${builddir}/${distName}" perm="ugo+rx"
			includes="**/*.sh"/>
		<!-- zip up the whole sheebang -->
		<zip destfile="${builddir}/${distName}.zip"
			basedir="${builddir}"
			includes="${distName}/**"/>
		<tar destfile="${builddir}/${distName}.tar"
			basedir="${builddir}"
			includes="${distName}/**"
			excludes="${distName}/adtpro.sh">
			<tarfileset dir="${builddir}" mode="755">
				<include name="${distName}/adtpro.sh"/>
			</tarfileset>
		</tar>
		<gzip destfile="${builddir}/${distName}.tar.gz"
			src="${builddir}/${distName}.tar" />
		<delete file="${builddir}/${distName}.tar" />
	</target>

	<target name="osx" if="isOSX">

		<!-- Build a pretty Mac OSX .app bundle -->
		<jarbundler dir="${builddir}/${distName}"
			name="${distName}"
			shortname="ADTPro"
			version="${versionString}"
			bundleid="org.adtpro.ADTPro"
			mainclass="org.adtpro.ADTPro"
			icon="${builddir}/ADTPro.icns"
			vmoptions="-Xms256m -Xmx512m -Djava.library.path=lib/rxtx/${rxtxVersion}/mac-10.5">
			<jarfilelist dir="${builddir}/${distName}/lib">
			    <file name="rxtx/${rxtxVersion}/RXTXcomm.jar"/>
				<file name="${distName}.jar"/>
			</jarfilelist>
		</jarbundler>
		<!-- Add an empty directory in the .app for each languge we translate into -->
		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/English.lproj"/>
		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/French.lproj"/>
		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/Korean.lproj"/>
 		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/Spanish.lproj"/>
 		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/Italian.lproj"/>
 		<mkdir dir="${builddir}/${distName}/${distName}.app/Contents/Resources/pt.lproj"/>

		<!-- Get rid of stuff the Apple crowd doesn't need -->
		<move file="${builddir}/${distName}/ADTPro.sh" tofile="${builddir}/${distName}/ADTPro.command"/>
		<delete file="${builddir}/${distName}/ADTPro.bat" />
		<delete file="${builddir}/${distName}/ADTPro.cmd" />

		<!-- Package up a nice .dmg -->
		<exec dir="${builddir}" os="Mac OS X" executable="/bin/sh">
			<arg value="-c"/>
			<arg value="${builddir}/mkdmg.sh ${builddir} ${distName} ${distName} ${distName} ${dmgmegabytes}"/>
		</exec>
	</target>
</project>
