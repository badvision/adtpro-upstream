<?xml version="1.0" encoding="UTF-8"?>
<project name="ADTPro" default="all" basedir="..">
	<property name="versionString" value="v.r.m" />
	<property name="distName" value="ADTPro-${versionString}" />
	<property name="diskName" value="ADTPRO-${versionString}" />
	<property name="diskNameSOS" value="ADTSOS-${versionString}" />
	<property name="volName" value="ADTPro.${versionString}" />
	<property name="dosVersionString" value="22" />
	<property name="dosDistName" value="ADT${dosVersionString}" />
	<property name="projdir" value="${basedir}" />
	<property name="builddir" value="${basedir}/build" />
	<property file="${builddir}/ADTProBuild.properties"/>
	<property file="${builddir}/ADTProBuild-default.properties"/>
	<property name="acJar" value="lib/AppleCommander-1.3.4d-ac.jar" />
	<property name="rxtxVersion" value="rxtx-2.1-7-bins-r2" />
	<property name="rxtxZip" value="rxtx-2.1-7-bins-r2.zip" />
	<taskdef name="appleDump" classname="org.adtpro.utilities.AppleDump" classpath="${projdir}"/>

	<target name="all" depends="wipe, clean, assemble, builddsk, scripts, jar">
	</target>

	<target name="dev" depends="clean, assemble, builddsk">
	</target>

	<target name="wipe">
		<!--
		Clean up everything
		-->
		<delete dir="${builddir}/${distName}" />
	</target>

	<target name="clean">
		<!--
		Clean up everything
		-->
		<!-- <delete file="${projdir}/client/src/dos/ADT" /> -->
		<delete file="${builddir}/ADT" />
		<delete file="${builddir}/ADTPRO" />
		<delete file="${builddir}/ADTSOS" />
		<delete file="${builddir}/ADTPROAUD" />
		<delete file="${builddir}/ADTPROETH" />
		<delete file="${builddir}/ADTSOSETH" />
		<delete file="${builddir}/${distName}.tar.gz" />
		<delete file="${builddir}/${distName}.zip" />
		<delete file="${builddir}/${distName}/disks/${diskName}.DSK" />
		<delete file="${builddir}/${distName}/disks/${diskName}.PO" />
		<delete file="${builddir}/${distName}/disks/${diskNameSOS}.DSK" />
		<delete file="${builddir}/${distName}/disks/${dosDistName}.DSK" />
		<delete file="${projdir}/org/adtpro/resources/adt.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtpro.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtproaud.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adtproeth.dmp" />
		<delete file="${projdir}/org/adtpro/resources/adt.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtpro.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtproaud.raw" />
		<delete file="${projdir}/org/adtpro/resources/adtproeth.raw" />
		<delete file="${projdir}/org/adtpro/resources/PD.dmp" />
		<delete>
			<fileset dir="${projdir}/client/src" includes="**/*.o"/>
			<fileset dir="${projdir}/client/src" includes="**/*.map"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lst"/>
			<fileset dir="${projdir}/client/src" includes="**/*.lib"/>
		</delete>
	</target>

	<target name="assemble">
		<mkdir dir="${builddir}/${distName}"/>
		<!--
		Assemble the ADTPro source
		-->
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none prodos/audio/audmain.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none prodos/ethernet/ethmain.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none prodos/serial/sermain.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none tail.asm" />
		</exec>
		<!--
		Assemble the ADTSOS source
		-->
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none sos/serial/sermain.asm" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ca65">
			<arg line="-l -t none sos/ethernet/ethmain.asm" />
		</exec>
		<!--
		Assemble and link the ADT source
		-->
		<exec dir="${projdir}/client/src/dos" executable="${assemblerPath}/cl65">
			<arg line="-l -t none adt.s -o ADT" />
		</exec>
		<!--
		Assemble the IP65 stack source
		-->
		<apply executable="${assemblerPath}/ca65" dir="${projdir}/client/src/ip65">
			<arg line="-l -t c64" />
			<fileset dir="${projdir}/client/src/ip65" includes="**/*.s"/>
		</apply>
		<!--
		Package the IP65 stack library
		-->
		<apply executable="${assemblerPath}/ar65" dir="${projdir}/client/src/ip65" output="ar65garbageoutputdeleteme">
			<arg line="a ip65.lib "/>
			<fileset dir="${projdir}/client/src/ip65" includes="**/*.o"/>
		</apply>
		<delete file="ar65garbageoutputdeleteme" />
		<!--
		Link the bits
		-->
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtproser.map -C prodos/serial/adtpro.cfg -o ADTPRO prodos/serial/sermain.o tail.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtproaud.map -C prodos/audio/adtpro.cfg -o ADTPROAUD prodos/audio/audmain.o tail.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtproeth.map -C prodos/ethernet/adtpro.cfg -o ADTPROETH prodos/ethernet/ethmain.o ip65/ip65.lib tail.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtsosser.map -C sos/serial/adtpro.cfg -o ADTSOS sos/serial/sermain.o tail.o" />
		</exec>
		<exec dir="${projdir}/client/src" executable="${assemblerPath}/ld65">
			<arg line="-m adtsoseth.map -C sos/ethernet/adtpro.cfg -o ADTSOSETH sos/ethernet/ethmain.o ip65/ip65.lib tail.o" />
		</exec>
		<!--
		Move the object code to the build directory
		-->
		<move file="${projdir}/client/src/ADTPRO" tofile="${builddir}/ADTPRO" />
		<copy file="${builddir}/ADTPRO" tofile="${basedir}/org/adtpro/resources/adtpro.raw" />
		<move file="${projdir}/client/src/ADTPROAUD" tofile="${builddir}/ADTPROAUD" />
		<copy file="${builddir}/ADTPROAUD" tofile="${basedir}/org/adtpro/resources/adtproaud.raw" />
		<move file="${projdir}/client/src/ADTPROETH" tofile="${builddir}/ADTPROETH" />
		<copy file="${builddir}/ADTPROETH" tofile="${basedir}/org/adtpro/resources/adtproeth.raw" />
		<move file="${projdir}/client/src/ADTSOS" tofile="${builddir}/ADTSOS" />
		<move file="${projdir}/client/src/ADTSOSETH" tofile="${builddir}/ADTSOSETH" />
		<move file="${projdir}/client/src/dos/ADT" tofile="${builddir}/ADT" />
		<copy file="${builddir}/ADT" tofile="${basedir}/org/adtpro/resources/adt.raw" />
		<!--
		Make dumpable versions
		-->
		<appleDump infilename="${projdir}/org/adtpro/resources/PD.raw" outfilename="${basedir}/org/adtpro/resources/PD.dmp" applename="PD" startaddrhex="2000" numbyteswide="10" decoration="begin" finalline="2000G E000G"/>
		<appleDump infilename="${builddir}/ADTPROETH" outfilename="${basedir}/org/adtpro/resources/adtproeth.dmp" applename="ADTPROETH" startaddrhex="2000" numbyteswide="10" decoration="begin" finalline="2000G"/>
		<appleDump infilename="${builddir}/ADTPROAUD" outfilename="${basedir}/org/adtpro/resources/adtproaud.dmp" applename="ADTPROAUD" startaddrhex="2000" numbyteswide="10" decoration="begin" finalline="2000G"/>
		<appleDump infilename="${builddir}/ADTPRO" outfilename="${basedir}/org/adtpro/resources/adtpro.dmp" applename="ADTPRO" startaddrhex="2000" numbyteswide="10"  decoration="begin" finalline="2000G"/>
		<appleDump infilename="${builddir}/ADT" outfilename="${basedir}/org/adtpro/resources/adt.dmp" applename="ADT" startaddrhex="803" numbyteswide="10" decoration="yes" />
	</target>

	<target name="scripts">
		<copy file="${builddir}/adtprobase.bat" tofile="${builddir}/${distName}/adtpro.bat" />
		<copy file="${builddir}/adtprobase.cmd" tofile="${builddir}/${distName}/adtpro.cmd" />
		<replace file="${builddir}/${distName}/adtpro.bat" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.bat" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<replace file="${builddir}/${distName}/adtpro.cmd" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.cmd" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<copy file="${builddir}/adtprobase.sh" tofile="${builddir}/${distName}/adtpro.sh" />
		<replace file="${builddir}/${distName}/adtpro.sh" token="%ADTPRO_VERSION%" value="${distName}.jar"/>
		<replace file="${builddir}/${distName}/adtpro.sh" token="%RXTX_VERSION%" value="${rxtxVersion}"/>
		<copy file="${builddir}/${distName}/adtpro.sh" tofile="${builddir}/${distName}/adtpro.command" />
	</target>

	<target name="builddsk">
		<!--
		Start disk images containing the release number
		-->
		<copy file="${builddir}/ADTProBase.dsk" tofile="${builddir}/${distName}/disks/${diskName}.DSK" />
		<copy file="${builddir}/ADTProBase.po" tofile="${builddir}/${distName}/disks/${diskName}.PO" />
		<copy file="${builddir}/ADTSOSBase.dsk" tofile="${builddir}/${distName}/disks/${diskNameSOS}.DSK" />
		<copy file="${builddir}/ADTBase.dsk" tofile="${builddir}/${distName}/disks/${dosDistName}.DSK" />
		<!--
		Put the assembled programs on the disk images
		-->
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPRO">
			<arg line="-jar ${acJar} -p ADTPRO sys 8192 ${distName}/disks/${diskName}.DSK" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPROAUD">
			<arg line="-jar ${acJar} -p ADTPROAUD sys 8192 ${distName}/disks/${diskName}.DSK" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPROETH">
			<arg line="-jar ${acJar} -p ADTPROETH sys 8192 ${distName}/disks/${diskName}.DSK" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTSOS">
			<arg line="-jar ${acJar} -p SOS.INTERP sos 0000 ${distName}/disks/${diskNameSOS}.DSK" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTSOSETH">
			<arg line="-jar ${acJar} -p SOS.INTERPETH sos 0000 ${distName}/disks/${diskNameSOS}.DSK" />
		</exec>
		<!--
		And the .po version...
		-->
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPRO">
			<arg line="-jar ${acJar} -p ADTPRO sys 8192 ${distName}/disks/${diskName}.PO" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPROAUD">
			<arg line="-jar ${acJar} -p ADTPROAUD sys 8192 ${distName}/disks/${diskName}.PO" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADTPROETH">
			<arg line="-jar ${acJar} -p ADTPROETH sys 8192 ${distName}/disks/${diskName}.PO" />
		</exec>
		<!--
		Put the assembled DOS ADT program on the .dsk image
		-->
		<exec dir="${builddir}" executable="java" input="${builddir}/ADT">
			<arg line="-jar ${acJar} -p ADT bin 2051 ${distName}/disks/${dosDistName}.DSK" />
		</exec>
		<exec dir="${builddir}" executable="java" input="${builddir}/ADT">
			<arg line="-jar ${acJar} -p ADT.BACKUP bin 2051 ${distName}/disks/${dosDistName}.DSK" />
		</exec>
		<!--
		Lock the backup ADT version
		-->
		<exec dir="${builddir}" executable="java">
			<arg line="-jar ${acJar} -k ADT.BACKUP ${distName}/disks/${dosDistName}.DSK" />
		</exec>
		<!--
		Put a nice volume name on the disk images
		-->
		<exec dir="${builddir}" executable="java">
			<arg line="-jar ${acJar} -v ${distName}/disks/${diskName}.DSK ${volName}" />
		</exec>
		<exec dir="${builddir}" executable="java">
			<arg line="-jar ${acJar} -v ${distName}/disks/${diskName}.PO ${volName}" />
		</exec>
		<delete file="${builddir}/ADT" />
		<delete file="${builddir}/ADTPRO" />
		<delete file="${builddir}/ADTPROAUD" />
		<delete file="${builddir}/ADTPROETH" />
		<delete file="${builddir}/ADTSOS" />
		<delete file="${builddir}/ADTSOSETH" />
	</target>

	<target name="jar">
		<unzip src="${builddir}/lib/rxtx/${rxtxZip}"
			dest="${builddir}/${distName}/lib"/>
		<move file="${builddir}/${distName}/lib/${rxtxVersion}"
			tofile="${builddir}/${distName}/lib/rxtx"/>
		<copy file="${builddir}/fixperm.command" todir="${builddir}/${distName}/lib/rxtx" />
		<copy file="${builddir}/README" todir="${builddir}/${distName}" />
		<copy file="${builddir}/LICENSE" todir="${builddir}/${distName}" />
		<copy file="${builddir}/ADTPro.html" todir="${builddir}/${distName}" />
		<copy file="${projdir}/org/adtpro/resources/ADTPro.ico" todir="${builddir}/${distName}/lib" />
		<!-- jar up the source, object and properties files -->
		<jar jarfile="${builddir}/${distName}/lib/${distName}.jar"
			manifest="${builddir}/manifest.mf"
			basedir="${projdir}"
			includes="org/**/*.class org/**/*.java org/**/*.properties org/**/*.png org/**/*.dmp org/**/*.raw LICENSE" />
		<chmod dir="${builddir}/${distName}" perm="ugo+rx"
			includes="**/*.sh **/*.command"/>
		<!-- zip up the whole sheebang -->
		<zip destfile="${builddir}/${distName}.zip"
			basedir="${builddir}"
			includes="${distName}/**"/>
		<tar destfile="${builddir}/${distName}.tar"
			basedir="${builddir}"
			includes="${distName}/**"
			excludes="${distName}/adtpro.sh ${distName}/adtpro.command ${distName}/lib/rxtx/fixperm.command">
			<tarfileset dir="${builddir}" mode="755">
				<include name="${distName}/lib/rxtx/fixperm.command"/>
				<include name="${distName}/adtpro.command"/>
				<include name="${distName}/adtpro.sh"/>
			</tarfileset>
		</tar>
		<gzip destfile="${builddir}/${distName}.tar.gz"
			src="${builddir}/${distName}.tar" />
		<delete file="${builddir}/${distName}.tar" />
	</target>

</project>
